///////////////////////// API I ZEETLE ///////////////////////////////
clientId:     41322bf1-ca4c-4541-b4e0-2a62046fcf22
clientSecret: IZSEC6a57d1a5-35f7-4aac-babd-b53eae8022f0

//////////////////////////////////////////////////////////////////////

MAP =
https://github.com/PDERAS/vue2-geocoder
https://github.com/olefirenko/vue-google-autocomplete
////////////////////////////////////////////////////////////////
just in case docker is doing pulling fs layer
docker-machine restart
docker-machine env
@FOR /f "tokens=*" %i IN ('docker-machine env') DO @%i



- docker-machine  start default
- docker-machine restart
- docker machine env
- @FOR /f "tokens=*" %i IN ('docker-machine env') DO @%i

Username: assdin504@gmail.com
  Temporary password: ANx6g2PJ // Holysmartness407

  year 2000 london
  dev-976497.oktapreview.com
  dev-976497

back up version just is case backup

console.log("index2.js");
const express = require('express')
const cors = require('cors')

const app = express()

app.use(cors())
app.use(express.json())

app.use((req, res, next) => {
  req.body = Object.entries(req.body).reduce(( acc, [key, value] ) => {
    acc[key] = (typeof value === 'string') ? value.replace(/\'/g, '\'\'') : value
    return acc
  }, {})
  next();
})



app.all('/*', (req, res, ) => {
  res.status(404).send('je suis la 404')
})


const port = process.env.PORT || 3000

app.listen(port, () => {
  console.log(`Connected server on port ${port} ( http://localhost:${port} )`)
})
.on('error', err => console.log('erreur de connexion : ', err))


====================================

git help : https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/

google gif
short link https://giphy.com/gifs/4f0yJLT9ZdLEc/html5
GIF Link https://media.giphy.com/media/4f0yJLT9ZdLEc/giphy.gif
html video = https://giphy.com/gifs/4f0yJLT9ZdLEc/html5


Bingo for display2 command
CREATE TABLE display2_command (
User_id integer REFERENCES users ON DELETE CASCADE,
User_name varchar (255),
Command_name varchar (255),
PRIMARY KEY (user_id)
);


INSERT INTO display2_command
SELECT users.id,
CONCAT(users.lastname,' ', users.firstname)
as name,
json_agg(json_build_object('id', users_command.command_id, 'name', command.name)) as command
FROM users
JOIN users_command ON users.id = users_command.user_id
JOIN command ON command.id = users_command.command_id
GROUP BY users.id


  item:[{"id":4,"name":"cmd4"},{"id":1,"name":"Cmd1"}]

  //////////////////////// NAV BAR ///////////////////////

  <nav>
  <ul class="list">
    <li class="item"> <router-link tag="li" to="/"> <a><i class="fas fa-home"></i> Home </a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/Sign"> <a> Sign </a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/NotreConcept"> <a>Notre Concept</a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/NotreProjet"> <a>Notre Projet</a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/Rejoindre"> <a>Rejoindre</a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/Reservez"> <a>Reservez</a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/Who"> <a> Qui sommes Nous</a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/AddCommand"> <a> AddCommand </a> </router-link></li>
  </ul>
  </nav>


  <nav>
  <ul class="list">
    <li class="item"> <router-link tag="li" to="/"> <a><i class="fas fa-home"></i> Home </a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/Sign"> <a> Sign </a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/NotreConcept"> <a>Notre Concept</a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/NotreProjet"> <a>Notre Projet</a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/Rejoindre"> <a>Rejoindre</a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/Reservez"> <a>Reservez</a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/Who"> <a> Qui sommes Nous</a> </router-link></li>
    <li class="item"> <router-link tag="li" to="/AddCommand"> <a> AddCommand </a> </router-link></li>
  </ul>
  </nav>



  <div>
      <b-card-group deck>
          <b-card img-src="https://placekitten.com/1000/300"
                  img-alt="Card image"
                  img-top>
              <p class="card-text">
                  Some quick example text to build on the card and make up the bulk of the card's content.
              </p>
          </b-card>
          <b-card img-src="https://placekitten.com/1000/300"
                  img-alt="Card image"
                  img-bottom>
              <p class="card-text">
                  Some quick example text to build on the card and make up the bulk of the card's content.
              </p>
          </b-card>
      </b-card-group>
  </div>


  <div>
      <b-card-group deck>
          <b-card img-src="https://placekitten.com/1000/300"
                  img-alt="Card image"
                  img-top>
              <p class="card-text">
                  Some quick example text to build on the card and make up the bulk of the card's content.
              </p>
          </b-card>
          <b-card img-src="https://placekitten.com/1000/300"
                  img-alt="Card image"
                  img-bottom>
              <p class="card-text">
                  Some quick example text to build on the card and make up the bulk of the card's content.
              </p>
          </b-card>
      </b-card-group>
  </div>

  ///////////////////////////////////////////////////////////////////////

  CREATE TABLE items
(
  id SERIAL PRIMARY KEY,
  name VARCHAR(255),
type VARCHAR(255),
title VARCHAR(255),
activity VARCHAR(255),
price integer,
dispo boolean
);


INSERT INTO items
(name, type, title, activity, price, dispo)
VALUES
('Alphonse', 'Wolkswagen', '2018-04-04', 'Faire le plein', 35, '0'),
('Bernard', 'Lexus', '2018-03-03', 'Faire le 1/2', 35, '1'),
('Celine', 'Mercedes', '2018-02-02', 'Faire le 1/4', 15, '1'),
('Daniel', 'Wolkswagen', '2018-07-07', 'Faire le 1/2', 35, '0'),
('Etienne', 'Wolkswagen', '2018-08-08', 'Faire le plein', 55, '0');

////////////////////////////////////////////////////////////////////////////////
From logged Fillers
getUsersNameCommandById:function(id){
  axios.get('http://localhost:3007/command'+ sessionStorage.command).then((response) => {
    //console.log('getUsersNameCommandById', response);
    if (response.data.error) {
      app.errorMessage = response.data.message;
      console.log('ERROR getUsersNameCommandById');
    } else {
      console.log('SUCESS SO', response.data.rows);
      this.ranges = response.data.rows;
      console.log('l id de luser est le suivant ', this.ranges[0].id);
      console.log('l id de luser est le suivant ', this.ranges.id);
      var loggedCommand = this.ranges[0].id;
      console.log('loggedUser ==>', loggedCommand);
      this.loggedCommand = {};
    }
  })
}



for logged users
<p> usersNameCommand </p> {{usersNameCommand}}
<p> rangeUsers </p> {{this.rangeUsers}}

<hr>
<tr v-for="range in rangeUsers">
  <td> {{range.user_id}}</td>
  <td> {{range.user_name}}</td>
  <td> {{range.command}}</td>
  <td> <i class="fas fa-pen-square" @click="showingEditModal = true; selectUser(user)"></i></td>
  <td> <i class="fas fa-times" @click="showingDeleteModal = true; selectUser(user)"></i> </td>
</tr>

//////////////////////////////////////////////////// DE BASE ADD MODAL //////////////////////////////
<div id="addModal" v-if="showingAddModal">
  <b-card title=" Add a New UserCommand"
          img-src="https://picsum.photos/600/300/?image=25"
          img-alt="Image"
          img-top
          tag="article"
          style="max-width: 20rem;"
          class="mb-2">
    <p class="card-text">
      <div>
       <button class="fright close" @click="showingAddModal = false"> <i class="fas fa-times-circle"></i> </button>
      <br>
      <div>
<button class="fright close" @click="showingAddModal = false"> CLOSE </button>
<table class="table">

<label for=""> Firstname </label>
<input type="text" name="" value="" v-model="newItem.name">
<hr>
<label for=""> Type </label>
<input type="text" name="" value="" v-model="newItem.type">
<select  v-model="newItem.type" class="" name="activite">
  <option   value="full"> DIESEL </option>
  <option   value="half"> Essence SP 98 </option>
  <option   value="quarter"> Essence SP 95 </option>
  <option   value="quarter"> Carburant GPL </option>
</select>

<hr>
<label for=""> title-date </label>
<input type="date" name="" value="" v-model="newItem.title">
<hr>
<label for=""> activite </label>
<input type="text" name="" value="" v-model="newItem.activity">
<select v-model="newItem.activity" class="" name="activite">
  <option value="full"> Faire le  Plein </option>
  <option value="half"> Faire le 1/2 </option>
  <option value="quarter"> Faire le 1/4 </option>
</select>

<hr>
<label for=""> Prix </label>
<input type="text" name="" value="" v-model="newItem.price">
<hr>
<label for=""> disponibilite </label>
<input type="text" name="" value="" v-model="newItem.dispo">
 <select v-model="newItem.dispo" class="" name="">
  <option value=""> YES </option>
  <option value=""> NO </option>
</select>
<hr>

</table>
<button @click="showingAddModal = false; createItem()" type="button" name="button"> CREER </button>
</div>

      </div>
    </p>
  </b-card>
</div>

////////////////////////////////////////////////////////////////////////////////

<label for="">Name</label>
<input type="text" name="" value="" v-model="clickedUsersNameCommand.name">
<label for="">type</label>
<input type="text" name="" value="" v-model="clickedUsersNameCommand.type">
<label for="">title</label>
<input type="text" name="" value="" v-model="clickedUsersNameCommand.title">
<label for="">activity</label>
<input type="text" name="" value="" v-model="clickedUsersNameCommand.activity">
<label for="">price</label>
<input type="text" name="" value="" v-model="clickedUsersNameCommand.price">
<label for="">dispo</label>
<input type="text" name="" value="" v-model="clickedUsersNameCommand.dispo">

////////////////////////////////////////////////////////////

<template>
    <v-container grid-list-md text-xs-center>
      <v-layout row wrap>
        <v-flex xs12>
          <v-card dark color="primary">
            <v-card-text class="px-0">12</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 2" :key="`6${i}`" xs6>
          <v-card dark color="secondary">
            <v-card-text class="px-0">6</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 3" :key="`4${i}`" xs4>
          <v-card dark color="primary">
            <v-card-text class="px-0">4</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 4" :key="`3${i}`" xs3>
          <v-card dark color="secondary">
            <v-card-text class="px-0">3</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 6" :key="`2${i}`" xs2>
          <v-card dark color="primary">
            <v-card-text class="px-0">2</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 12" :key="`1${i}`" xs1>
          <v-card dark color="secondary">
            <v-card-text class="px-0">1</v-card-text>
          </v-card>
        </v-flex>
      </v-layout>
    </v-container>
  </template>    <template>
          <v-container grid-list-md text-xs-center>
            <v-layout row wrap>
              <v-flex xs12>
                <v-card dark color="primary">
                  <v-card-text class="px-0">12</v-card-text>
                </v-card>
              </v-flex>
              <v-flex v-for="i in 2" :key="`6${i}`" xs6>
                <v-card dark color="secondary">
                  <v-card-text class="px-0">6</v-card-text>
                </v-card>
              </v-flex>
              <v-flex v-for="i in 3" :key="`4${i}`" xs4>
                <v-card dark color="primary">
                  <v-card-text class="px-0">4</v-card-text>
                </v-card>
              </v-flex>
              <v-flex v-for="i in 4" :key="`3${i}`" xs3>
                <v-card dark color="secondary">
                  <v-card-text class="px-0">3</v-card-text>
                </v-card>
              </v-flex>
              <v-flex v-for="i in 6" :key="`2${i}`" xs2>
                <v-card dark color="primary">
                  <v-card-text class="px-0">2</v-card-text>
                </v-card>
              </v-flex>
              <v-flex v-for="i in 12" :key="`1${i}`" xs1>
                <v-card dark color="secondary">
                  <v-card-text class="px-0">1</v-card-text>
                </v-card>
              </v-flex>
            </v-layout>
          </v-container>
        </template>

        ////////////////////////////////////////////////////////////////////////


TOP BUTTONS ON logfillers
<button type="button" name="button" @click="showingEditModal = true;"> EDIT </button>
<button type="button" name="button" @click="showingDeleteModal = true;"> DELETE </button>

<button  @click="showingAddModal = true" type="" name="button">
<i class="fas fa-address-card fa-5x"></i>
</button>

///////////////////////////////////////////////////////////////////////////

<template>
  <div id="app">
    <input ref="autocomplete"
        placeholder="Search"
        class="search-location"
        onfocus="value = ''"
        type="text" />
  </div>
</template>

<script>
export default {
  mounted() {
    this.autocomplete = new google.maps.places.Autocomplete(
      (this.$refs.autocomplete),
      {types: ['geocode']}
    );
    this.autocomplete.addListener('place_changed', () => {
  let place = this.autocomplete.getPlace();
  let ac = place.address_components;
  let lat = place.geometry.location.lat();
  let lon = place.geometry.location.lng();
  let city = ac[0]["short_name"];
  console.log(`The user picked ${city} with the coordinates ${lat}, ${lon}`);
});
  }
}
</script>

<style>
*, *::after, *::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

body {
  background-color: #dcdde1;
  color: #2f3640;
  padding: 3rem;
}

.search-location {
  display: block;
  width: 60vw;
  margin: 0 auto;
  margin-top: 5vw;
  font-size: 20px;
  font-weight: 400;
  outline: none;
  height: 30px;
  line-height: 30px;
  text-align: center;
  border-radius: 10px;
}
</style>

CREATE TABLE headers (
id SERIAL PRIMARY KEY,
carburant varchar(255),
type varchar(255),
disponibilite boolean,
qualite varchar(255),
Prix integer
)

/////////////////////////////////////////////////////////////////////////

//         small: [
// {id:1, carburant:"DIESEL", type:"polluant", disponibilite:true, qualite:"acceptable", prix: 35},
// {id:2, carburant:"ESSENCE S98", type:"polluant", disponibilite:true, qualite:"passable", prix: 50},
// {id:3, carburant:"Carburant GPL", type:"anti-polluant", disponibilite:false, qualite:"acceptable", prix: 90},
// {id:4, carburant:"Essence SP 95", type:"polluant", disponibilite:true, qualite:"acceptable", prix: 35},
// {id:5, carburant:"DIESEL", type:"anti-polluant", disponibilite:false, qualite:"passable", prix: 130},
// {id:6, carburant:"DIESEL", type:"anti-polluant", disponibilite:false, qualite:"non-acceptable", prix: 150},
// {id:7, carburant:"Essence SP 98", type:"polluant", disponibilite:true, qualite:"acceptable", prix: 30},
// {id:8, carburant:"DIESEL", type:"polluant", disponibilite:true, qualite:"non-acceptable", prix: 40}
// ]

<table class="table">
  <tr>
    <th> ID </th>
    <th> Carburant </th>
    <th> Type </th>
    <th> disponibilite </th>
    <th> qualite </th>
    <th> prix</th>
  </tr>

 <tr v-for="header in headers">
<td>{{ header.id }}</td>
<td>{{ header.carburant }}</td>
<td>{{ header.type }}</td>
<td>{{ header.disponibilite }}</td>
<td>{{ header.qualite }}</td>
<td>{{ header.prix }}</td>
 </tr>
</table>


//////////////////// template one to twelve /////////////////

<template>
    <v-container grid-list-md text-xs-center>
      <v-layout row wrap>
        <v-flex xs12>
          <v-card dark color="primary">
            <v-card-text class="px-0">12</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 2" :key="`6${i}`" xs6>
          <v-card dark color="secondary">
            <v-card-text class="px-0">6</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 3" :key="`4${i}`" xs4>
          <v-card dark color="primary">
            <v-card-text class="px-0">4</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 4" :key="`3${i}`" xs3>
          <v-card dark color="secondary">
            <v-card-text class="px-0">3</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 6" :key="`2${i}`" xs2>
          <v-card dark color="primary">
            <v-card-text class="px-0">2</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 12" :key="`1${i}`" xs1>
          <v-card dark color="secondary">
            <v-card-text class="px-0">1</v-card-text>
          </v-card>
        </v-flex>
      </v-layout>
    </v-container>
  </template>

//////////////////////////////////////////////////////

<template>
    <v-container grid-list-md text-xs-center>
      <v-layout row wrap>
        <v-flex xs12>
          <v-card dark color="primary">
            <v-card-text class="px-0">12</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 2" :key="`6${i}`" xs6>
          <v-card dark color="secondary">
            <v-card-text class="px-0">6</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 3" :key="`4${i}`" xs4>
          <v-card dark color="primary">
            <v-card-text class="px-0">4</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 4" :key="`3${i}`" xs3>
          <v-card dark color="secondary">
            <v-card-text class="px-0">3</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 6" :key="`2${i}`" xs2>
          <v-card dark color="primary">
            <v-card-text class="px-0">2</v-card-text>
          </v-card>
        </v-flex>
        <v-flex v-for="i in 12" :key="`1${i}`" xs1>
          <v-card dark color="secondary">
            <v-card-text class="px-0">1</v-card-text>
          </v-card>
        </v-flex>
      </v-layout>
    </v-container>
  </template>


  ////////////////////////////////// iframe ////////////////////////////////////
  <div class="video">
    <iframe class="iframe" src="https://giphy.com/embed/2rQh6ESbvzQC4" allowFullScreen></iframe>
  </div>

  .video{
    height: 30vh;
    width:55vw;
    margin: auto;
    border: 2px solid orangered;
  }
  .iframe{
    width: 55vw;
    height: 30vh;
  }


  /////////////////// import icons ////////////////////////
  https://vuetifyjs.com/en/framework/icons#using-custom-icons


  /////////////////////////// template jumbontron ///////////////
  <template>
  <v-jumbotron>
    <v-container fill-height>
      <v-layout align-center>
        <v-flex>
          <h3 class="display-3">Welcome to the site</h3>

          <span class="subheading">Lorem ipsum dolor sit amet, pri veniam forensibus id. Vis maluisset molestiae id, ad semper lobortis cum. At impetus detraxit incorrupte usu, repudiare assueverit ex eum, ne nam essent vocent admodum.</span>

          <v-divider class="my-3"></v-divider>

          <div class="title mb-3">Check out our newest features!</div>

          <v-btn
            class="mx-0"
            color="primary"
            large
          >
            See more
          </v-btn>
        </v-flex>
      </v-layout>
    </v-container>
  </v-jumbotron>
</template>


//////////////////////////// rating //////////////////////////////

<template>
  <v-card
    class="mx-auto hide-overflow"
    style="max-width: 600px;"
  >
    <v-layout>
      <v-flex xs6 d-flex>
        <v-img
          src="https://cdn.vuetifyjs.com/images/ratings/fortnite1.png"
        ></v-img>
      </v-flex>
      <v-flex xs6>
        <v-container
          grid-list-md
          pa-0
          pl-2
          style="margin: -4px 0"
        >
          <v-layout wrap>
            <v-flex xs7 d-flex>
              <v-img
                src="https://cdn.vuetifyjs.com/images/ratings/fortnite2.png"
              ></v-img>
            </v-flex>
            <v-flex xs5 d-flex>
              <v-img
                src="https://cdn.vuetifyjs.com/images/ratings/fortnite3.png"
              ></v-img>
            </v-flex>
            <v-flex xs5 d-flex>
              <v-img
                src="https://cdn.vuetifyjs.com/images/ratings/fortnite4.png"
              ></v-img>
            </v-flex>
            <v-flex xs7 d-flex>
              <v-img
                src="https://cdn.vuetifyjs.com/images/ratings/fortnite5.png"
              ></v-img>
            </v-flex>
          </v-layout>
        </v-container>
      </v-flex>
    </v-layout>
    <v-card-title class="align-start">
      <div>
        <span class="headline">FORTNITE</span>
        <div class="grey--text font-weight-light">Video game</div>
      </div>
      <v-spacer></v-spacer>
      <v-dialog
        v-model="dialog"
        width="400"
      >
        <v-icon slot="activator">
          mdi-share-variant
        </v-icon>
        <v-card>
          <v-card-title>
            <span class="title font-weight-bold">Share</span>
            <v-spacer></v-spacer>
            <v-btn
              class="mx-0"
              icon
              @click="dialog = false"
            >
              <v-icon>mdi-close-circle-outline</v-icon>
            </v-btn>
          </v-card-title>
          <v-list>
            <v-list-tile @click="">
              <v-list-tile-action>
                <v-icon color="indigo">mdi-facebook-box</v-icon>
              </v-list-tile-action>
              <v-card-title>Facebook</v-card-title>
            </v-list-tile>
            <v-list-tile @click="">
              <v-list-tile-action>
                <v-icon color="cyan">mdi-twitter-box</v-icon>
              </v-list-tile-action>
              <v-card-title>Twitter</v-card-title>
            </v-list-tile>
            <v-list-tile @click="">
              <v-list-tile-action>
                <v-icon>mdi-email</v-icon>
              </v-list-tile-action>
              <v-card-title>Email</v-card-title>
            </v-list-tile>
          </v-list>
          <v-text-field
            ref="link"
            :label="copied ? 'Link copied' : 'Click to copy link'"
            class="pa-3"
            readonly
            value="https://g.co/kgs/nkrK43"
            @click="copy"
          ></v-text-field>
        </v-card>
      </v-dialog>
    </v-card-title>
    <v-divider></v-divider>
    <v-card-actions>
      <span class="pl-2 grey--text text--darken-2 font-weight-light caption">16,544 reviews</span>
      <v-spacer></v-spacer>
      <v-rating
        v-model="rating"
        length="10"
        readonly
      >
        <v-icon
          slot="item"
          slot-scope="props"
          :color="props.isFilled ? 'purple darken-4' : ''"
          v-text="`mdi-numeric-${props.index}-box`"
        ></v-icon>
      </v-rating>
    </v-card-actions>
    <div class="pa-3 pt-0 caption">
      <em>Portions of the materials used are trademarks and/or copyrighted works of Epic Games, Inc. All rights reserved by Epic. This material is not official and is not endorsed by Epic.</em>
    </div>
  </v-card>
</template>

<script>
  export default {
    data: () => ({
      copied: false,
      dialog: false,
      rating: 10
    }),

    methods: {
      copy () {
        const markup = this.$refs.link
        markup.focus()
        document.execCommand('selectAll', false, null)
        this.copied = document.execCommand('copy')
      }
    }
  }
</script>


<tr v-for="nwit in newItem">
  <td>{{nwit.id}}</td>
  <td>{{nwit.name}}</td>
  <td>{{nwit.type}}</td>
  <td>{{nwit.title}}</td>
  <td>{{nwit.activity}}</td>
  <td>{{nwit.price}}</td>
  <td>{{nwit.dispo}}</td>
  <td><button @click="showingEditModal = true ;select(item)" type="button" name="button"> EDIT </button> </td>
  <td><button @click="showingDeleteModal = true;select(item)" type="button" name="button"> DELETE </button> </td>
</tr>


//////////////////////////// Vue img and vue rating //////////////////////
- vue img : https://www.npmjs.com/package/v-img
- vue img - https://github.com/crowdbotics/v-img
- vue rating : https://www.npmjs.com/package/v-rating
https://www.jsdelivr.com/package/npm/vue-star-rating
https://www.npmjs.com/package/v-rating
cdn - https://cdn.jsdelivr.net/npm/vue-star-rating@1.6.0/dist/star-rating.min.js

////////////////////////// const to transform numbers /////////////////
createHeader: function(){
  const sentHeader = {
    ...this.newHeader,
     command_id: +this.newHeader.command_id,
     user_id:+this.newHeader.user_id,
     prix:+this.newHeader.prix,
     filler_id:+this.newHeader.filler_id
  }


  or do the following


  const sentHeader = {
     command_id: +this.newHeader.command_id,
     user_id:+this.newHeader.user_id,
     carburant: this.newHeader.carburant,
     type:this.newHeader.type,
     disponibilite: this.newHeader.disponibilite ,
     qualite:this.newHeader.qualite,
     prix:+this.newHeader.prix,
     date: this.newHeader.date,
     activity:this.newHeader.activity,
     filler_id:+this.newHeader.filler_id
  }


for log user

session storage
user 2
filler 2
