back up version just is case backup

console.log("index2.js");
const express = require('express')
const cors = require('cors')

const app = express()

app.use(cors())
app.use(express.json())

app.use((req, res, next) => {
  req.body = Object.entries(req.body).reduce(( acc, [key, value] ) => {
    acc[key] = (typeof value === 'string') ? value.replace(/\'/g, '\'\'') : value
    return acc
  }, {})
  next();
})



app.all('/*', (req, res, ) => {
  res.status(404).send('je suis la 404')
})


const port = process.env.PORT || 3000

app.listen(port, () => {
  console.log(`Connected server on port ${port} ( http://localhost:${port} )`)
})
.on('error', err => console.log('erreur de connexion : ', err))


====================================

git help : https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/

google gif
short link https://giphy.com/gifs/4f0yJLT9ZdLEc/html5
GIF Link https://media.giphy.com/media/4f0yJLT9ZdLEc/giphy.gif
html video = https://giphy.com/gifs/4f0yJLT9ZdLEc/html5


for display2 command
CREATE TABLE display2_command (
User_id integer REFERENCES users ON DELETE CASCADE,
User_name varchar (255),
Command_name varchar (255),
PRIMARY KEY (user_id)
);


INSERT INTO display2_command
SELECT users.id,
CONCAT(users.lastname,' ', users.firstname)
as name,
json_agg(json_build_object('id', users_command.command_id, 'name', command.name)) as command
FROM users
JOIN users_command ON users.id = users_command.user_id
JOIN command ON command.id = users_command.command_id
GROUP BY users.id
